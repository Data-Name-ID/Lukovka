services:
  backend:
    build: ./backend
    ports:
      - ${BACKEND__RUN__PORT}:${BACKEND__RUN__PORT}
    depends_on:
      postgres-backend:
        condition: service_healthy
    env_file:
      - .env
    restart: always

  # frontend:
  #   build: ./frontend
  #   expose:
  #     - "80"
  #   restart: always

  postgres-backend:
    image: postgres:16-alpine
    ports:
      - ${BACKEND__DB__PORT}:${BACKEND__DB__PORT}
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${BACKEND__DB__USER}
      - POSTGRES_PASSWORD=${BACKEND__DB__PASSWORD}
      - POSTGRES_DB=${BACKEND__DB__NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 2s
      timeout: 5s
      retries: 10
    command: -p ${BACKEND__DB__PORT}
    restart: always

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      # - frontend
      - backend
    restart: always
